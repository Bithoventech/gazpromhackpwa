import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useGame } from '@/contexts/GameContext';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import { toast } from 'sonner';
import { Shield, AlertTriangle, CheckCircle, XCircle } from 'lucide-react';

const AntiFraudQuest = () => {
  const navigate = useNavigate();
  const { completeQuest, updateQuest } = useGame();
  const [currentScreen, setCurrentScreen] = useState(1);
  const [score, setScore] = useState(0);
  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);
  const [selectedFlags, setSelectedFlags] = useState<string[]>([]);
  const totalScreens = 6;

  const handleAnswer = (isCorrect: boolean, feedback: string, answerIndex: number) => {
    setSelectedAnswer(answerIndex);
    if (isCorrect) {
      setScore(prev => prev + 1);
      toast.success('–ü—Ä–∞–≤–∏–ª—å–Ω–æ! ' + feedback);
    } else {
      toast.error('–û—à–∏–±–∫–∞! ' + feedback);
    }
    
    setTimeout(() => {
      const nextScreen = currentScreen + 1;
      setCurrentScreen(nextScreen);
      setSelectedAnswer(null);
      updateQuest('antifraud', (nextScreen / totalScreens) * 100);
    }, 2000);
  };

  const toggleFlag = (flag: string) => {
    setSelectedFlags(prev => 
      prev.includes(flag) 
        ? prev.filter(f => f !== flag)
        : [...prev, flag]
    );
  };

  const handleComplete = () => {
    completeQuest('antifraud');
    toast.success('–ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! +75 –º–æ–Ω–µ—Ç, +60 XP', {
      description: '–¢—ã —Ç–µ–ø–µ—Ä—å –Ω–∞ —à–∞–≥ –≤–ø–µ—Ä–µ–¥–∏ –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤!',
    });
    navigate('/quests');
  };

  const renderScreen = () => {
    switch (currentScreen) {
      case 1:
        return (
          <Card className="border-primary/20">
            <CardHeader>
              <div className="flex items-center gap-2 mb-2">
                <Shield className="w-8 h-8 text-primary" />
                <Badge variant="outline">–í–≤–µ–¥–µ–Ω–∏–µ</Badge>
              </div>
              <CardTitle className="text-2xl">–¢—ã ‚Äî —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤!</CardTitle>
              <CardDescription className="text-base">
                –°–µ–≥–æ–¥–Ω—è —Ç–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —Ä–∞–∑–æ–±–ª–∞—á–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏—Ö –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∞—Ç–∞–∫—É—é—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–∞–Ω–∫–∞ —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏.
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="bg-primary/10 p-6 rounded-lg">
                <p className="text-lg font-medium mb-4">–¢–≤–æ—è –º–∏—Å—Å–∏—è:</p>
                <ul className="space-y-2 text-muted-foreground">
                  <li className="flex items-start gap-2">
                    <CheckCircle className="w-5 h-5 text-primary mt-0.5 flex-shrink-0" />
                    <span>–†–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ñ–∏—à–∏–Ω–≥–æ–≤—ã–µ –∞—Ç–∞–∫–∏</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <CheckCircle className="w-5 h-5 text-primary mt-0.5 flex-shrink-0" />
                    <span>–†–∞—Å–∫—Ä—ã—Ç—å –∑–≤–æ–Ω–∫–∏ –ª–∂–µ-—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <CheckCircle className="w-5 h-5 text-primary mt-0.5 flex-shrink-0" />
                    <span>–ù–∞–π—Ç–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞</span>
                  </li>
                </ul>
              </div>
              <Button onClick={() => setCurrentScreen(2)} size="lg" className="w-full">
                –ù–∞—á–∞—Ç—å —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
              </Button>
            </CardContent>
          </Card>
        );

      case 2:
        return (
          <Card className="border-destructive/20">
            <CardHeader>
              <div className="flex items-center gap-2 mb-2">
                <AlertTriangle className="w-8 h-8 text-destructive" />
                <Badge variant="destructive">–°–∏—Ç—É–∞—Ü–∏—è ‚Ññ1</Badge>
              </div>
              <CardTitle>–§–∏—à–∏–Ω–≥–æ–≤–æ–µ SMS</CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="bg-muted p-4 rounded-lg border-l-4 border-destructive">
                <p className="font-mono text-sm">
                  üì± "–í–∞—à —Å—á—ë—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω! –°—Ä–æ—á–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ: gazpromo-–±–∞–Ω–∫.ru/secure"
                </p>
              </div>
              
              <p className="text-lg font-medium">–ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?</p>
              
              <div className="space-y-3">
                <Button
                  variant="outline"
                  className={`w-full justify-start h-auto p-4 text-left transition-all ${
                    selectedAnswer === 0 ? 'border-destructive bg-destructive/10' : ''
                  }`}
                  onClick={() => handleAnswer(false, '–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–∞–º –∏–∑ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π!', 0)}
                  disabled={selectedAnswer !== null}
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ
                </Button>
                <Button
                  variant="outline"
                  className={`w-full justify-start h-auto p-4 text-left transition-all ${
                    selectedAnswer === 1 ? 'border-destructive bg-destructive/10' : ''
                  }`}
                  onClick={() => handleAnswer(false, '–ù–æ–º–µ—Ä –∏–∑ SMS –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–¥–¥–µ–ª—å–Ω—ã–º. –ò—Å–ø–æ–ª—å–∑—É–π –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã!', 1)}
                  disabled={selectedAnswer !== null}
                >
                  –ü–æ–∑–≤–æ–Ω–∏—Ç—å –≤ –±–∞–Ω–∫ –ø–æ –Ω–æ–º–µ—Ä—É –∏–∑ SMS
                </Button>
                <Button
                  variant="outline"
                  className={`w-full justify-start h-auto p-4 text-left transition-all ${
                    selectedAnswer === 2 ? 'border-green-500 bg-green-500/10 animate-pulse' : ''
                  }`}
                  onClick={() => handleAnswer(true, '–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–∞–º –∏–∑ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.', 2)}
                  disabled={selectedAnswer !== null}
                >
                  {selectedAnswer === 2 && <CheckCircle className="w-5 h-5 text-green-500 mr-2" />}
                  –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—á—ë—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
                </Button>
              </div>

              <div className="bg-primary/10 p-4 rounded-lg">
                <p className="text-sm font-medium mb-2">üí° –ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –Ω–∞—Å—Ç–æ—è—â–∏–π –∞–¥—Ä–µ—Å –±–∞–Ω–∫–∞?</p>
                <ul className="text-sm text-muted-foreground space-y-1">
                  <li>‚úì –ù–µ—Ç –æ–ø–µ—á–∞—Ç–æ–∫ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –¥–æ–º–µ–Ω–∞</li>
                  <li>‚úì –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTPS –ø—Ä–æ—Ç–æ–∫–æ–ª</li>
                  <li>‚úì –ê–¥—Ä–µ—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º —Å–∞–π—Ç–æ–º</li>
                </ul>
              </div>
            </CardContent>
          </Card>
        );

      case 3:
        return (
          <Card className="border-destructive/20">
            <CardHeader>
              <div className="flex items-center gap-2 mb-2">
                <AlertTriangle className="w-8 h-8 text-destructive" />
                <Badge variant="destructive">–°–∏—Ç—É–∞—Ü–∏—è ‚Ññ2</Badge>
              </div>
              <CardTitle>–ó–≤–æ–Ω–æ–∫ "–æ—Ç —Å–ª—É–∂–±—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"</CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="bg-muted p-4 rounded-lg border-l-4 border-destructive">
                <p className="font-mono text-sm">
                  üìû "–ú—ã –∏–∑ —Å–ª—É–∂–±—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –±–∞–Ω–∫–∞. –¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ä–æ—á–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å SMS-–∫–æ–¥ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏!"
                </p>
              </div>
              
              <p className="text-lg font-medium">–¢–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è:</p>
              
              <div className="space-y-3">
                <Button
                  variant="outline"
                  className={`w-full justify-start h-auto p-4 text-left transition-all ${
                    selectedAnswer === 0 ? 'border-destructive bg-destructive/10' : ''
                  }`}
                  onClick={() => handleAnswer(false, '–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–æ–æ–±—â–∞–π –∫–æ–¥—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º, –¥–∞–∂–µ –µ—Å–ª–∏ –∑–≤–æ–Ω–æ–∫ –∫–∞–∂–µ—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–º!', 0)}
                  disabled={selectedAnswer !== null}
                >
                  –ù–∞–∑–≤–∞—Ç—å –∫–æ–¥ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
                </Button>
                <Button
                  variant="outline"
                  className={`w-full justify-start h-auto p-4 text-left transition-all ${
                    selectedAnswer === 1 ? 'border-green-500 bg-green-500/10 animate-pulse' : ''
                  }`}
                  onClick={() => handleAnswer(true, '–¢—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!', 1)}
                  disabled={selectedAnswer !== null}
                >
                  {selectedAnswer === 1 && <CheckCircle className="w-5 h-5 text-green-500 mr-2" />}
                  –í–µ–∂–ª–∏–≤–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é –±–∞–Ω–∫–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
                </Button>
                <Button
                  variant="outline"
                  className={`w-full justify-start h-auto p-4 text-left transition-all ${
                    selectedAnswer === 2 ? 'border-destructive bg-destructive/10' : ''
                  }`}
                  onClick={() => handleAnswer(false, '–õ—É—á—à–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å –≤ –±–∞–Ω–∫ —Å–∞–º–æ–º—É!', 2)}
                  disabled={selectedAnswer !== null}
                >
                  –ù–µ –æ—Ç–≤–µ—á–∞—Ç—å / –æ—Ç–ª–æ–∂–∏—Ç—å
                </Button>
              </div>

              <div className="bg-primary/10 p-4 rounded-lg">
                <p className="text-sm font-medium mb-2">üõ°Ô∏è –ß—Ç–æ –ù–ï –±—É–¥–µ—Ç —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫:</p>
                <ul className="text-sm text-muted-foreground space-y-1">
                  <li>‚úó SMS-–∫–æ–¥—ã –∏ –ø–∞—Ä–æ–ª–∏</li>
                  <li>‚úó –ü–ò–ù-–∫–æ–¥ –∫–∞—Ä—Ç—ã</li>
                  <li>‚úó CVV-–∫–æ–¥ —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –∫–∞—Ä—Ç—ã</li>
                  <li>‚úì –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–µ—Ä–Ω—ã–π —Å–ø–æ—Å–æ–± ‚Äî –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å –≤ –±–∞–Ω–∫ —Å–∞–º</li>
                </ul>
              </div>
            </CardContent>
          </Card>
        );

      case 4:
        return (
          <Card className="border-destructive/20">
            <CardHeader>
              <div className="flex items-center gap-2 mb-2">
                <AlertTriangle className="w-8 h-8 text-destructive" />
                <Badge variant="destructive">–°–∏—Ç—É–∞—Ü–∏—è ‚Ññ3</Badge>
              </div>
              <CardTitle>–ü–∏—Å—å–º–æ —Å –æ–±–µ—â–∞–Ω–∏–µ–º —Å–≤–µ—Ä—Ö–¥–æ—Ö–æ–¥–∞</CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="bg-muted p-4 rounded-lg border-l-4 border-destructive">
                <p className="font-mono text-sm">
                  üìß "–í–ª–æ–∂–∏ —Å–µ–≥–æ–¥–Ω—è –∏ –ø–æ–ª—É—á–∏ 20% –≤ –º–µ—Å—è—Ü! –°—Å—ã–ª–∫–∞ –Ω–∞ –ü–ª–∞—Ç—Ñ–æ—Ä–º—É: bank-secure-invest.xyz"
                </p>
              </div>
              
              <p className="text-lg font-medium">–ö–∞–∫ –ø–æ—Å—Ç—É–ø–∏—à—å?</p>
              
              <div className="space-y-3">
                <Button
                  variant="outline"
                  className={`w-full justify-start h-auto p-4 text-left transition-all ${
                    selectedAnswer === 0 ? 'border-green-500 bg-green-500/10 animate-pulse' : ''
                  }`}
                  onClick={() => handleAnswer(true, '–¢—ã —Ä–∞—Å–∫—Ä—ã–ª –ª–æ–∂–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å—Ö–µ–º–∞ –æ—Ç—ä—ë–º–∞ –¥–µ–Ω–µ–≥.', 0)}
                  disabled={selectedAnswer !== null}
                >
                  {selectedAnswer === 0 && <CheckCircle className="w-5 h-5 text-green-500 mr-2" />}
                  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫–æ–≤–∏–∫ –∏ —Ä–µ–µ—Å—Ç—Ä –¶–ë
                </Button>
                <Button
                  variant="outline"
                  className={`w-full justify-start h-auto p-4 text-left transition-all ${
                    selectedAnswer === 1 ? 'border-destructive bg-destructive/10' : ''
                  }`}
                  onClick={() => handleAnswer(false, '–í—ã—Å–æ–∫–∏–π –¥–æ—Ö–æ–¥ ‚Äî –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –æ–±–º–∞–Ω!', 1)}
                  disabled={selectedAnswer !== null}
                >
                  –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
                </Button>
                <Button
                  variant="outline"
                  className={`w-full justify-start h-auto p-4 text-left transition-all ${
                    selectedAnswer === 2 ? 'border-green-500 bg-green-500/10 animate-pulse' : ''
                  }`}
                  onClick={() => handleAnswer(true, '–û—Ç–ª–∏—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ! –ü–æ–º–æ–≥–∏ –±–∞–Ω–∫—É –∑–∞—â–∏—Ç–∏—Ç—å –¥—Ä—É–≥–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.', 2)}
                  disabled={selectedAnswer !== null}
                >
                  {selectedAnswer === 2 && <CheckCircle className="w-5 h-5 text-green-500 mr-2" />}
                  –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø–∏—Å—å–º–æ –±–∞–Ω–∫—É
                </Button>
              </div>

              <div className="bg-primary/10 p-4 rounded-lg">
                <p className="text-sm font-medium mb-2">‚ö†Ô∏è –ö–∞–∫ –Ω–µ —Å—Ç–∞—Ç—å –∂–µ—Ä—Ç–≤–æ–π –ø—Å–µ–≤–¥–æ-–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:</p>
                <ul className="text-sm text-muted-foreground space-y-1">
                  <li>‚úì –ü—Ä–æ–≤–µ—Ä—è–π –ª–∏—Ü–µ–Ω–∑–∏–∏ –∫–æ–º–ø–∞–Ω–∏–π –≤ —Ä–µ–µ—Å—Ç—Ä–µ –¶–ë</li>
                  <li>‚úì –ß–∏—Ç–∞–π –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –æ—Ç–∑—ã–≤—ã</li>
                  <li>‚úì –ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏</li>
                  <li>‚úó –û–±–µ—â–∞–Ω–∏—è –≤—ã—Å–æ–∫–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ = –∫—Ä–∞—Å–Ω—ã–π —Ñ–ª–∞–≥</li>
                </ul>
              </div>
            </CardContent>
          </Card>
        );

      case 5:
        return (
          <Card className="border-primary/20">
            <CardHeader>
              <div className="flex items-center gap-2 mb-2">
                <Shield className="w-8 h-8 text-primary" />
                <Badge>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤</Badge>
              </div>
              <CardTitle>–ù–∞–π–¥–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞</CardTitle>
              <CardDescription>–û—Ç–º–µ—Ç—å –≤—Å–µ –∫—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö</CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-4">
                <div className="bg-muted p-4 rounded-lg">
                  <p className="text-sm font-medium mb-3">–°–æ–æ–±—â–µ–Ω–∏–µ 1:</p>
                  <p className="font-mono text-sm mb-3">
                    "–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç! –í–∞—à–∞ –∫–∞—Ä—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–∞. –î–ª—è —Ä–æ–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—ã–ª–∫–µ: 
                    htt://sber-bank-online.xyz/unlock?id=12345"
                  </p>
                  <div className="flex flex-wrap gap-2">
                    <Badge 
                      variant={selectedFlags.includes('orth1') ? 'destructive' : 'outline'}
                      className="cursor-pointer transition-all"
                      onClick={() => toggleFlag('orth1')}
                    >
                      –û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
                    </Badge>
                    <Badge 
                      variant={selectedFlags.includes('url1') ? 'destructive' : 'outline'}
                      className="cursor-pointer transition-all"
                      onClick={() => toggleFlag('url1')}
                    >
                      –°—Ç—Ä–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞
                    </Badge>
                    <Badge 
                      variant={selectedFlags.includes('https1') ? 'destructive' : 'outline'}
                      className="cursor-pointer transition-all"
                      onClick={() => toggleFlag('https1')}
                    >
                      –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ HTTPS
                    </Badge>
                  </div>
                </div>

                <div className="bg-muted p-4 rounded-lg">
                  <p className="text-sm font-medium mb-3">–°–æ–æ–±—â–µ–Ω–∏–µ 2:</p>
                  <p className="font-mono text-sm mb-3">
                    "–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ 5000‚ÇΩ –Ω–∞ —Å—á–µ—Ç 1234567890 –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å–∞. 
                    –£—Å–ø–µ–π—Ç–µ –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è!"
                  </p>
                  <div className="flex flex-wrap gap-2">
                    <Badge 
                      variant={selectedFlags.includes('money2') ? 'destructive' : 'outline'}
                      className="cursor-pointer transition-all"
                      onClick={() => toggleFlag('money2')}
                    >
                      –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –¥–µ–Ω–µ–≥
                    </Badge>
                    <Badge 
                      variant={selectedFlags.includes('urgent2') ? 'destructive' : 'outline'}
                      className="cursor-pointer transition-all"
                      onClick={() => toggleFlag('urgent2')}
                    >
                      –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è —Å—Ä–æ—á–Ω–æ—Å—Ç—å
                    </Badge>
                    <Badge 
                      variant={selectedFlags.includes('transfer2') ? 'destructive' : 'outline'}
                      className="cursor-pointer transition-all"
                      onClick={() => toggleFlag('transfer2')}
                    >
                      –ù–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥
                    </Badge>
                  </div>
                </div>

                <div className="bg-muted p-4 rounded-lg">
                  <p className="text-sm font-medium mb-3">–°–æ–æ–±—â–µ–Ω–∏–µ 3:</p>
                  <p className="font-mono text-sm mb-3">
                    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ. 
                    –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞."
                  </p>
                  <div className="flex flex-wrap gap-2">
                    <Badge 
                      variant={selectedFlags.includes('nolinks3') ? 'outline' : 'outline'}
                      className={`cursor-pointer transition-all ${
                        selectedFlags.includes('nolinks3') ? 'border-green-500 text-green-600' : ''
                      }`}
                      onClick={() => toggleFlag('nolinks3')}
                    >
                      –ù–µ—Ç —Å—Å—ã–ª–æ–∫
                    </Badge>
                    <Badge 
                      variant={selectedFlags.includes('official3') ? 'outline' : 'outline'}
                      className={`cursor-pointer transition-all ${
                        selectedFlags.includes('official3') ? 'border-green-500 text-green-600' : ''
                      }`}
                      onClick={() => toggleFlag('official3')}
                    >
                      –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª
                    </Badge>
                  </div>
                </div>
              </div>

              <Button onClick={() => setCurrentScreen(6)} size="lg" className="w-full">
                –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
              </Button>
            </CardContent>
          </Card>
        );

      case 6:
        return (
          <Card className="border-primary/20">
            <CardHeader>
              <div className="flex items-center gap-2 mb-2">
                <CheckCircle className="w-8 h-8 text-green-500" />
                <Badge className="bg-green-500">–ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!</Badge>
              </div>
              <CardTitle className="text-2xl">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –¥–µ—Ç–µ–∫—Ç–∏–≤!</CardTitle>
              <CardDescription className="text-base">
                –¢—ã —Ä–∞—Å–∫—Ä—ã–ª –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ —Å—Ö–µ–º—ã ‚Äî —Ç–µ–ø–µ—Ä—å –¥–µ–π—Å—Ç–≤—É–µ—à—å –∫–∞–∫ –ø—Ä–æ—Ñ–∏!
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="bg-primary/10 p-6 rounded-lg space-y-4">
                <div className="flex items-center justify-between">
                  <span className="font-medium">–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:</span>
                  <span className="text-2xl font-bold text-primary">{score} / 3</span>
                </div>
                <Progress value={(score / 3) * 100} className="h-2" />
              </div>

              <div className="space-y-3">
                <div className="flex items-center gap-3 bg-muted p-4 rounded-lg">
                  <div className="bg-primary/20 p-2 rounded-full">
                    <Shield className="w-6 h-6 text-primary" />
                  </div>
                  <div>
                    <p className="font-medium">–ë–µ–π–¥–∂ ¬´–ê–Ω—Ç–∏—Ñ—Ä–æ–¥-–ù–æ–≤–∏—á–æ–∫¬ª</p>
                    <p className="text-sm text-muted-foreground">–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!</p>
                  </div>
                </div>

                <div className="flex items-center gap-3 bg-muted p-4 rounded-lg">
                  <div className="text-2xl">ü™ô</div>
                  <div>
                    <p className="font-medium">+75 FinCoins</p>
                    <p className="text-sm text-muted-foreground">–ù–∞–≥—Ä–∞–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞</p>
                  </div>
                </div>

                <div className="flex items-center gap-3 bg-muted p-4 rounded-lg">
                  <div className="text-2xl">‚≠ê</div>
                  <div>
                    <p className="font-medium">+60 XP</p>
                    <p className="text-sm text-muted-foreground">–û–ø—ã—Ç –Ω–∞—á–∏—Å–ª–µ–Ω</p>
                  </div>
                </div>
              </div>

              <div className="bg-amber-500/10 border border-amber-500/20 p-4 rounded-lg">
                <p className="text-sm font-medium text-amber-600 dark:text-amber-400">
                  üí° –ó–∞–ø–æ–º–Ω–∏ –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ: –±–∞–Ω–∫ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–ø—Ä–æ—Å–∏—Ç —Ç–µ–±—è —Å–æ–æ–±—â–∏—Ç—å SMS-–∫–æ–¥—ã, –ü–ò–ù –∏–ª–∏ CVV. 
                  –ü—Ä–∏ –º–∞–ª–µ–π—à–µ–º —Å–æ–º–Ω–µ–Ω–∏–∏ ‚Äî –∑–≤–æ–Ω–∏ –≤ –±–∞–Ω–∫ —Å–∞–º!
                </p>
              </div>

              <div className="flex gap-3">
                <Button onClick={handleComplete} size="lg" className="flex-1">
                  –ó–∞–≤–µ—Ä—à–∏—Ç—å –∫–≤–µ—Å—Ç
                </Button>
                <Button onClick={() => navigate('/quests')} variant="outline" size="lg" className="flex-1">
                  –ö –∫–≤–µ—Å—Ç–∞–º
                </Button>
              </div>
            </CardContent>
          </Card>
        );

      default:
        return null;
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-background to-muted/20 p-4">
      <div className="max-w-2xl mx-auto space-y-4">
        <div className="flex items-center justify-between">
          <Button variant="ghost" onClick={() => navigate('/quests')}>
            ‚Üê –ù–∞–∑–∞–¥
          </Button>
          <div className="flex items-center gap-2">
            <span className="text-sm text-muted-foreground">
              –≠–∫—Ä–∞–Ω {currentScreen} –∏–∑ {totalScreens}
            </span>
          </div>
        </div>

        <Progress value={(currentScreen / totalScreens) * 100} className="h-2" />

        {renderScreen()}
      </div>
    </div>
  );
};

export default AntiFraudQuest;
