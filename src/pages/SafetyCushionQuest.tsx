import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useGame } from '@/contexts/GameContext';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { toast } from 'sonner';

export default function SafetyCushionQuest() {
  const navigate = useNavigate();
  const { completeQuest, unlockAchievement } = useGame();
  const [currentScreen, setCurrentScreen] = useState(1);
  const [userChoices, setUserChoices] = useState<Record<string, string>>({});
  const [monthlyExpense, setMonthlyExpense] = useState('');
  const [investmentAmount, setInvestmentAmount] = useState('100000');

  const totalScreens = 9;
  const progress = (currentScreen / totalScreens) * 100;

  const handleChoice = (screen: string, choice: string) => {
    setUserChoices({ ...userChoices, [screen]: choice });
  };

  const handleNext = () => {
    if (currentScreen < totalScreens) {
      setCurrentScreen(currentScreen + 1);
    }
  };

  const handleComplete = () => {
    completeQuest('safety-cushion');
    unlockAchievement('1');
    toast.success('–ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! –ü–æ–ª—É—á–µ–Ω–æ: –ë–µ–π–¥–∂ ¬´–ù–∞–∫–æ–ø–∏—Ç–µ–ª—å¬ª, +75 FinCoins, +50 XP');
    setTimeout(() => navigate('/dashboard'), 2000);
  };

  const calculateCushion = () => {
    const expense = parseFloat(monthlyExpense) || 0;
    return {
      min: expense * 1.5,
      optimal: expense * 3,
    };
  };

  const calculateInvestmentReturn = (amount: number, rate: number, months: number) => {
    return amount * (1 + rate / 100 / 12) ** months;
  };

  return (
    <div className="min-h-screen bg-game-bg pb-20">
      <div className="sticky top-0 bg-card border-b border-border z-10 px-6 py-4">
        <div className="flex items-center gap-4">
          <Button variant="ghost" size="icon" onClick={() => navigate('/quests')}>
            ‚Üê
          </Button>
          <div className="flex-1">
            <h1 className="text-xl font-bold">–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h1>
            <Progress value={progress} className="mt-2 h-2" />
          </div>
        </div>
      </div>

      <div className="p-6 max-w-2xl mx-auto">
        {/* Screen 1: Interactive Story */}
        {currentScreen === 1 && (
          <Card>
            <CardHeader>
              <CardTitle>üé≠ –°—Ü–µ–Ω–∞—Ä–∏–π: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è</CardTitle>
              <CardDescription>–í—ã–±–µ—Ä–∏ —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-lg">
                –¢—ã —Å—Ç—É–¥–µ–Ω—Ç/–º–æ–ª–æ–¥–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª. –ó–∞—Ä–ø–ª–∞—Ç–∞ –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –º–µ—Å—è—Ü. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?
              </p>
              <div className="space-y-2">
                {[
                  { id: 'savings', text: 'üí∞ –û—Ç–∫—Ä—ã—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è', tip: '–õ—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç! –ò–º–µ–Ω–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–∞ –ø–æ–¥—É—à–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.' },
                  { id: 'friends', text: 'ü§ù –ó–∞–Ω—è—Ç—å —É –¥—Ä—É–∑–µ–π', tip: '–ú–æ–∂–Ω–æ, –Ω–æ —Å–æ–∑–¥–∞—ë—Ç –¥–æ–ª–≥–æ–≤—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–µ—Ä–µ–¥ –±–ª–∏–∑–∫–∏–º–∏.' },
                  { id: 'sell', text: 'üì± –ü—Ä–æ–¥–∞—Ç—å —Ç–µ—Ö–Ω–∏–∫—É', tip: '–ö—Ä–∞–π–Ω—è—è –º–µ—Ä–∞, –ø–æ—Ç–µ—Ä—è –∏–º—É—â–µ—Å—Ç–≤–∞ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏.' },
                  { id: 'loan', text: 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç/–º–∏–∫—Ä–æ–∑–∞–π–º', tip: '–•—É–¥—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç - –≤—ã—Å–æ–∫–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏ –¥–æ–ª–≥–æ–≤–∞—è —è–º–∞!' },
                ].map((option) => (
                  <div key={option.id}>
                    <Button
                      variant={userChoices.screen1 === option.id ? 'default' : 'outline'}
                      className="w-full text-left justify-start"
                      onClick={() => handleChoice('screen1', option.id)}
                    >
                      {option.text}
                    </Button>
                    {userChoices.screen1 === option.id && (
                      <p className="text-sm text-muted-foreground mt-2 p-3 bg-muted rounded-md">
                        üí° {option.tip}
                      </p>
                    )}
                  </div>
                ))}
              </div>
              {userChoices.screen1 && (
                <Button onClick={handleNext} className="w-full">
                  –î–∞–ª–µ–µ ‚Üí
                </Button>
              )}
            </CardContent>
          </Card>
        )}

        {/* Screen 2: Educational Lesson */}
        {currentScreen === 2 && (
          <Card>
            <CardHeader>
              <CardTitle>üìö –ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞?</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="space-y-3">
                <div className="p-4 bg-primary/10 rounded-lg border border-primary/20">
                  <p className="font-semibold">üõ°Ô∏è –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
                  <p className="text-sm text-muted-foreground">
                    –ó–∞–ø–∞—Å –¥–µ–Ω–µ–≥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–∂–∏—Ç—å –±–µ–∑ –¥–æ—Ö–æ–¥–∞ 2‚Äì3 –º–µ—Å—è—Ü–∞
                  </p>
                </div>
                <div className="p-4 bg-success/10 rounded-lg border border-success/20">
                  <p className="font-semibold">üìä –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞</p>
                  <p className="text-sm text-muted-foreground">
                    –û—Ç 1,5x –¥–æ 3x –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
                  </p>
                </div>
                <div className="p-4 bg-gold/10 rounded-lg border border-gold/20">
                  <p className="font-semibold">üè¶ –ì–¥–µ –¥–µ—Ä–∂–∞—Ç—å?</p>
                  <p className="text-sm text-muted-foreground">
                    –õ—É—á—à–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–º –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á—ë—Ç–µ –∏–ª–∏ –¥–µ–ø–æ–∑–∏—Ç–µ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —Å–Ω—è—Ç–∏—è
                  </p>
                </div>
              </div>
              <div className="mt-6">
                <label className="text-sm font-medium">–¢–≤–æ–∏ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã (‚ÇΩ):</label>
                <Input
                  type="number"
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 30000"
                  value={monthlyExpense}
                  onChange={(e) => setMonthlyExpense(e.target.value)}
                  className="mt-2"
                />
                {monthlyExpense && (
                  <div className="mt-4 p-4 bg-card border rounded-lg">
                    <p className="text-sm font-semibold">–¢–≤–æ—è –ø–æ–¥—É—à–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</p>
                    <p className="text-lg">
                      –ú–∏–Ω–∏–º—É–º: <span className="text-success font-bold">{calculateCushion().min.toLocaleString()} ‚ÇΩ</span>
                    </p>
                    <p className="text-lg">
                      –û–ø—Ç–∏–º–∞–ª—å–Ω–æ: <span className="text-primary font-bold">{calculateCushion().optimal.toLocaleString()} ‚ÇΩ</span>
                    </p>
                  </div>
                )}
              </div>
              <Button onClick={handleNext} className="w-full">
                –î–∞–ª–µ–µ ‚Üí
              </Button>
            </CardContent>
          </Card>
        )}

        {/* Screen 3: Strategy Choice */}
        {currentScreen === 3 && (
          <Card>
            <CardHeader>
              <CardTitle>üíº –í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥—É—à–∫–∏</CardTitle>
              <CardDescription>–£ —Ç–µ–±—è 100 000 ‚ÇΩ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤</CardDescription>
            </CardHeader>
            <CardContent className="space-y-3">
              {[
                { id: 'deposit', name: '–î–µ–ø–æ–∑–∏—Ç —Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º', rate: '6-8%', risk: '–ù–∏–∑–∫–∏–π', access: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω' },
                { id: 'auto', name: '–ö–æ–ø–∏–ª–∫–∞ —Å –∞–≤—Ç–æ–æ—Ç—á–∏—Å–ª–µ–Ω–∏–µ–º', rate: '4-6%', risk: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π', access: '–°—Ä–µ–¥–Ω–∏–π' },
                { id: 'saving', name: '–°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç', rate: '3-5%', risk: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π', access: '–ë—ã—Å—Ç—Ä—ã–π' },
                { id: 'invest', name: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å', rate: '10-15%', risk: '–í—ã—Å–æ–∫–∏–π', access: '–í–æ–∑–º–æ–∂–Ω—ã —É–±—ã—Ç–∫–∏' },
              ].map((option) => (
                <Button
                  key={option.id}
                  variant={userChoices.screen3 === option.id ? 'default' : 'outline'}
                  className="w-full justify-start h-auto p-4"
                  onClick={() => handleChoice('screen3', option.id)}
                >
                  <div className="text-left w-full">
                    <p className="font-semibold">{option.name}</p>
                    <div className="flex gap-2 mt-1 flex-wrap">
                      <Badge variant="secondary">{option.rate}</Badge>
                      <Badge variant={option.risk === '–í—ã—Å–æ–∫–∏–π' ? 'destructive' : 'outline'}>
                        –†–∏—Å–∫: {option.risk}
                      </Badge>
                      <Badge variant="outline">–î–æ—Å—Ç—É–ø: {option.access}</Badge>
                    </div>
                  </div>
                </Button>
              ))}
              {userChoices.screen3 && (
                <div className="p-4 bg-muted rounded-md mt-4">
                  <p className="text-sm">
                    üí° –î–ª—è –ø–æ–¥—É—à–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞–∂–Ω–∞ <strong>–Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</strong>, –∞ –Ω–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥!
                    –õ—É—á—à–∏–π –≤—ã–±–æ—Ä - —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç —Å –±—ã—Å—Ç—Ä—ã–º –¥–æ—Å—Ç—É–ø–æ–º.
                  </p>
                </div>
              )}
              {userChoices.screen3 && (
                <Button onClick={handleNext} className="w-full">
                  –î–∞–ª–µ–µ ‚Üí
                </Button>
              )}
            </CardContent>
          </Card>
        )}

        {/* Screen 4: Calculator */}
        {currentScreen === 4 && (
          <Card>
            <CardHeader>
              <CardTitle>üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π</CardTitle>
              <CardDescription>–ü–æ—Å–º–æ—Ç—Ä–∏, –∫–∞–∫ —Ä–∞—Å—Ç—É—Ç —Ç–≤–æ–∏ –¥–µ–Ω—å–≥–∏</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <label className="text-sm font-medium">–°—É–º–º–∞ (‚ÇΩ):</label>
                <Input
                  type="number"
                  value={investmentAmount}
                  onChange={(e) => setInvestmentAmount(e.target.value)}
                  className="mt-2"
                />
              </div>
              <div className="grid grid-cols-2 gap-4">
                {[
                  { name: '–î–µ–ø–æ–∑–∏—Ç 7%', rate: 7 },
                  { name: '–°—á—ë—Ç 5%', rate: 5 },
                  { name: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ 12%', rate: 12 },
                  { name: '–ü–æ–¥ –º–∞—Ç—Ä–∞—Å–æ–º 0%', rate: 0 },
                ].map((variant) => {
                  const result = calculateInvestmentReturn(parseFloat(investmentAmount) || 0, variant.rate, 12);
                  const profit = result - parseFloat(investmentAmount);
                  return (
                    <div key={variant.name} className="p-3 bg-card border rounded-lg">
                      <p className="text-sm font-semibold">{variant.name}</p>
                      <p className="text-lg font-bold text-primary">{result.toLocaleString('ru-RU', { maximumFractionDigits: 0 })} ‚ÇΩ</p>
                      <p className="text-xs text-success">+{profit.toLocaleString('ru-RU', { maximumFractionDigits: 0 })} ‚ÇΩ</p>
                    </div>
                  );
                })}
              </div>
              <div className="p-4 bg-primary/10 rounded-md">
                <p className="text-sm font-semibold">üí° –°–æ–≤–µ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞:</p>
                <p className="text-sm">–î–ª—è –ø–æ–¥—É—à–∫–∏ –≤–∞–∂–Ω–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –∞ –Ω–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥! –ò–Ω—Ñ–ª—è—Ü–∏—è —Å—ä–µ—Å—Ç –¥–µ–Ω—å–≥–∏ –ø–æ–¥ –º–∞—Ç—Ä–∞—Å–æ–º.</p>
              </div>
              <Button onClick={handleNext} className="w-full">
                –î–∞–ª–µ–µ ‚Üí
              </Button>
            </CardContent>
          </Card>
        )}

        {/* Screen 5: Emergency Simulator */}
        {currentScreen === 5 && (
          <Card>
            <CardHeader>
              <CardTitle>‚ö° –°—Ä–æ—á–Ω–æ –Ω—É–∂–Ω—ã –¥–µ–Ω—å–≥–∏!</CardTitle>
              <CardDescription>–ö–∞–∫ –±—ã—Å—Ç—Ä–æ —Ç—ã –º–æ–∂–µ—à—å –∏—Ö —Å–Ω—è—Ç—å?</CardDescription>
            </CardHeader>
            <CardContent className="space-y-3">
              {[
                { id: 'deposit', text: '–î–µ–ø–æ–∑–∏—Ç', consequence: '‚ùå –ü–æ—Ç–µ—Ä—è–µ—à—å –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã' },
                { id: 'saving', text: '–°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç', consequence: '‚úÖ –°–Ω—è—Ç–∏–µ –±–µ–∑ –ø–æ—Ç–µ—Ä—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç' },
                { id: 'invest', text: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', consequence: '‚ö†Ô∏è –ú–æ–∂–µ—à—å –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ 20% –∏–∑-–∑–∞ –ø–∞–¥–µ–Ω–∏—è —Ä—ã–Ω–∫–∞' },
              ].map((option) => (
                <div key={option.id}>
                  <Button
                    variant={userChoices.screen5 === option.id ? 'default' : 'outline'}
                    className="w-full text-left justify-start"
                    onClick={() => handleChoice('screen5', option.id)}
                  >
                    {option.text}
                  </Button>
                  {userChoices.screen5 === option.id && (
                    <p className="text-sm text-muted-foreground mt-2 p-3 bg-muted rounded-md">
                      {option.consequence}
                    </p>
                  )}
                </div>
              ))}
              {userChoices.screen5 && (
                <Button onClick={handleNext} className="w-full">
                  –î–∞–ª–µ–µ ‚Üí
                </Button>
              )}
            </CardContent>
          </Card>
        )}

        {/* Screen 6: Common Mistakes */}
        {currentScreen === 6 && (
          <Card>
            <CardHeader>
              <CardTitle>üö´ –û—à–∏–±–∫–∏ –Ω–æ–≤–∏—á–∫–æ–≤</CardTitle>
              <CardDescription>–ì–¥–µ —á–∞—â–µ –≤—Å–µ–≥–æ —Ç–µ—Ä—è—é—Ç –¥–µ–Ω—å–≥–∏?</CardDescription>
            </CardHeader>
            <CardContent className="space-y-3">
              {[
                { error: '–î–µ—Ä–∂–∞—Ç –≤—Å—ë –≤ –Ω–∞–ª–∏—á–Ω—ã—Ö', reason: '–ò–Ω—Ñ–ª—è—Ü–∏—è —Å—ä–µ–¥–∞–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—å–Ω—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å (~5-7% –≤ –≥–æ–¥)' },
                { error: '–•—Ä–∞–Ω—è—Ç –ø–æ–¥—É—à–∫—É –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö', reason: '–†—ã–Ω–æ–∫ –º–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω—ã –¥–µ–Ω—å–≥–∏' },
                { error: '–ù–µ —Ä–∞–∑–¥–µ–ª—è—é—Ç –ø–æ–¥—É—à–∫—É –∏ –ª–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã', reason: '–õ–µ–≥–∫–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ —Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏' },
              ].map((item, index) => (
                <div key={index} className="p-4 bg-destructive/10 border border-destructive/20 rounded-lg">
                  <p className="font-semibold text-destructive">‚ùå {item.error}</p>
                  <p className="text-sm text-muted-foreground mt-1">{item.reason}</p>
                </div>
              ))}
              <Button onClick={handleNext} className="w-full">
                –î–∞–ª–µ–µ ‚Üí
              </Button>
            </CardContent>
          </Card>
        )}

        {/* Screen 7: Life Hacks */}
        {currentScreen === 7 && (
          <Card>
            <CardHeader>
              <CardTitle>üí° –õ–∞–π—Ñ—Ö–∞–∫–∏ –æ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞</CardTitle>
            </CardHeader>
            <CardContent className="space-y-3">
              {[
                { icon: 'ü§ñ', text: '–î–µ–ª–∞–π –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏', desc: '–ù–∞—Å—Ç—Ä–æ–π –∞–≤—Ç–æ–ø–µ—Ä–µ–≤–æ–¥ 10% –∑–∞—Ä–ø–ª–∞—Ç—ã –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å—á—ë—Ç' },
                { icon: 'üí∞', text: '–ü–æ–ø–æ–ª–Ω—è–π —Ä–µ–∑–µ—Ä–≤ –ø—Ä–∏ –ª—é–±–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏', desc: '–ü—Ä–µ–º–∏—è, –∫—ç—à–±—ç–∫, –ø–æ–¥–∞—Ä–æ–∫ - –≤—Å—ë –≤ –ø–æ–¥—É—à–∫—É!' },
                { icon: 'üê¢', text: '–õ—É—á—à–µ –º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ!', desc: '–î–∞–∂–µ 1000‚ÇΩ –≤ –º–µ—Å—è—Ü = 12000‚ÇΩ –≤ –≥–æ–¥ + –ø—Ä–æ—Ü–µ–Ω—Ç—ã' },
              ].map((tip, index) => (
                <div key={index} className="p-4 bg-success/10 border border-success/20 rounded-lg">
                  <p className="font-semibold">
                    {tip.icon} {tip.text}
                  </p>
                  <p className="text-sm text-muted-foreground mt-1">{tip.desc}</p>
                </div>
              ))}
              <Button onClick={handleNext} className="w-full">
                –î–∞–ª–µ–µ ‚Üí
              </Button>
            </CardContent>
          </Card>
        )}

        {/* Screen 8: Summary and Reward */}
        {currentScreen === 8 && (
          <Card>
            <CardHeader>
              <CardTitle>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</CardTitle>
              <CardDescription>–¢—ã —Å–æ–∑–¥–∞–ª —Å–≤–æ—é –ø–µ—Ä–≤—É—é –ø–æ–¥—É—à–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="text-center py-6">
                <div className="text-6xl mb-4">üõ°Ô∏è</div>
                <h3 className="text-xl font-bold mb-2">–ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!</h3>
              </div>
              <div className="space-y-2">
                <div className="p-3 bg-gold/10 border border-gold/20 rounded-lg flex items-center gap-3">
                  <span className="text-2xl">üèÜ</span>
                  <div>
                    <p className="font-semibold">–ë–µ–π–¥–∂ ¬´–ù–∞–∫–æ–ø–∏—Ç–µ–ª—å¬ª</p>
                    <p className="text-sm text-muted-foreground">–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ</p>
                  </div>
                </div>
                <div className="p-3 bg-primary/10 border border-primary/20 rounded-lg flex items-center gap-3">
                  <span className="text-2xl">üí∞</span>
                  <div>
                    <p className="font-semibold">+75 FinCoins</p>
                    <p className="text-sm text-muted-foreground">–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∫–≤–µ—Å—Ç</p>
                  </div>
                </div>
                <div className="p-3 bg-success/10 border border-success/20 rounded-lg flex items-center gap-3">
                  <span className="text-2xl">‚≠ê</span>
                  <div>
                    <p className="font-semibold">+50 XP</p>
                    <p className="text-sm text-muted-foreground">–û–ø—ã—Ç –ø–æ–ª—É—á–µ–Ω</p>
                  </div>
                </div>
              </div>
              <Button onClick={handleNext} className="w-full">
                –î–∞–ª–µ–µ ‚Üí
              </Button>
            </CardContent>
          </Card>
        )}

        {/* Screen 9: Final Push */}
        {currentScreen === 9 && (
          <Card>
            <CardHeader>
              <CardTitle>üöÄ –¢–≤–æ—è —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="p-6 bg-gradient-to-r from-primary/20 to-success/20 rounded-lg text-center">
                <p className="text-lg font-semibold mb-2">
                  –ù–µ –∑–∞–±—ã–≤–∞–π: –ø–æ–ø–æ–ª–Ω–∏—Ç—å –ø–æ–¥—É—à–∫—É ‚Äî —Ç–≤–æ—è —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å!
                </p>
                <p className="text-muted-foreground">
                  –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —ç—Ç–æ —Ç–µ–±—è —Å–ø–∞—Å—ë—Ç. üí™
                </p>
              </div>
              <div className="space-y-2">
                <Button onClick={handleComplete} className="w-full" size="lg">
                  –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                </Button>
                <Button onClick={() => navigate('/quests')} variant="outline" className="w-full">
                  –°–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∫–≤–µ—Å—Ç—ã
                </Button>
              </div>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
}
